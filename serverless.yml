service: serverless-ping-${env:PING_NAME}

useDotenv: true

provider:
  name: aws
  runtime: python3.9
  memorySize: 128
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  environment:
    SERVICE_STAGE: ${self:service}-${opt:stage, self:provider.stage}
    PING_METRIC_NAME: ${self:provider.environment.SERVICE_STAGE}
    PING_ALARM_NAMESPACE: ${env:PING_ALARM_NAMESPACE, 'Serverless/Ping'}
    PING_NAME: ${env:PING_NAME}
    PING_HOST: ${env:PING_HOST}
    PING_ALARM_EMAIL: ${env:PING_ALARM_EMAIL}
    SENTRY_DSN: ${env:PING_SENTRY_DSN, ''}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cloudwatch:PutMetricData
          Resource: '*'
functions:
  ping:
    handler: handler.ping
    events:
      - schedule: rate(1 minute)
resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:provider.environment.SERVICE_STAGE}
    SNSSubscription:
      Type: AWS::SNS::Subscription
      DependsOn: SNSTopic
      Properties:
        Protocol: email
        Endpoint: ${self:provider.environment.PING_ALARM_EMAIL}
        TopicArn:
          Ref: SNSTopic
    PingAlarm:
      Type: AWS::CloudWatch::Alarm
      DependsOn: SNSSubscription
      Properties:
        AlarmName: ${self:provider.environment.PING_NAME}-alarm
        Namespace: ${self:provider.environment.PING_ALARM_NAMESPACE}
        MetricName: ${self:provider.environment.PING_METRIC_NAME}
        Dimensions:
          - Name: Host
            Value: ${self:provider.environment.PING_HOST}
        Statistic: Minimum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 0
        ComparisonOperator: LessThanOrEqualToThreshold
        AlarmActions:
          - Ref: SNSTopic
        InsufficientDataActions:
          - Ref: SNSTopic
        OKActions:
          - Ref: SNSTopic
